"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[28181],{28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var i=s(96540);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}},35963:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"docs/developer-resources/better-auth","title":"Frontend Integration with Better Auth","description":"Installation","source":"@site/docs/docs/developer-resources/better-auth.md","sourceDirName":"docs/developer-resources","slug":"/docs/developer-resources/better-auth","permalink":"/docs/docs/developer-resources/better-auth","draft":false,"unlisted":false,"editUrl":"https://github.com/PalisadoesFoundation/talawa-admin/edit/develop/docs/docs/docs/developer-resources/better-auth.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Troubleshooting","permalink":"/docs/developer-resources/troubleshooting"},"next":{"title":"MiniO","permalink":"/docs/docs/developer-resources/MiniO-fileupload-guidelines"}}');var t=s(74848),r=s(28453);const o={},l="Frontend Integration with Better Auth",a={},c=[{value:"Installation",id:"installation",level:2},{value:"Setting up Better Auth Client",id:"setting-up-better-auth-client",level:2},{value:"Custom Authentication Response",id:"custom-authentication-response",level:2},{value:"Handling User Registration",id:"handling-user-registration",level:2},{value:"Explanation:",id:"explanation",level:3},{value:"Handling User Login",id:"handling-user-login",level:2},{value:"Explanation:",id:"explanation-1",level:3},{value:"Managing User Sessions",id:"managing-user-sessions",level:2},{value:"Accessing User Sessions",id:"accessing-user-sessions",level:3},{value:"Revoking Other Sessions (Except Current)",id:"revoking-other-sessions-except-current",level:3},{value:"Revoking All Sessions",id:"revoking-all-sessions",level:3},{value:"Logging Out the User",id:"logging-out-the-user",level:3},{value:"Session Handling with Cookies",id:"session-handling-with-cookies",level:2},{value:"Accessing Sessions",id:"accessing-sessions",level:3},{value:"Summary",id:"summary",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"frontend-integration-with-better-auth",children:"Frontend Integration with Better Auth"})}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsxs)(n.p,{children:["To integrate ",(0,t.jsx)(n.strong,{children:"Better Auth"})," into the frontend, install it using npm or yarn:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"npm install better-auth\n"})}),"\n",(0,t.jsx)(n.h2,{id:"setting-up-better-auth-client",children:"Setting up Better Auth Client"}),"\n",(0,t.jsxs)(n.p,{children:["Create an instance of the ",(0,t.jsx)(n.strong,{children:"auth client"})," to handle authentication requests. The base URL should point to the authentication server."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { createAuthClient } from 'better-auth/react';\n\nexport const authClient = createAuthClient({\n  baseURL: process.env.BASE_URL_SERVER, // The base URL of the auth server\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," Ensure that ",(0,t.jsx)(n.code,{children:"BASE_URL_SERVER"})," is defined in the ",(0,t.jsx)(n.code,{children:".env"})," file."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"custom-authentication-response",children:"Custom Authentication Response"}),"\n",(0,t.jsx)(n.p,{children:"We define the expected authentication response structure:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"export type IUserDetails = {\n  token: string;\n  id: string;\n  email: string;\n  name: string;\n  role?: string | null;\n  countryCode?: string | null;\n  avatarName?: string | null;\n};\n\nexport type IAuthResponse = {\n  statusCode: string;\n  message: string;\n  data: IUserDetails;\n};\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"handling-user-registration",children:"Handling User Registration"}),"\n",(0,t.jsxs)(n.p,{children:["To sign up a user, use the ",(0,t.jsx)(n.code,{children:"signUp.email"})," method provided by ",(0,t.jsx)(n.strong,{children:"Better Auth"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const { data: signUpData, error } = await authClient.signUp.email(\n  {\n    email: signEmail,\n    password: signPassword,\n    name: signName,\n  },\n  {\n    onRequest: () => {\n      setSigninLoading(true); // Disable button while request is in progress\n    },\n    onResponse() {\n      setSigninLoading(false); // Re-enable button after response\n    },\n  },\n);\n"})}),"\n",(0,t.jsx)(n.h3,{id:"explanation",children:"Explanation:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"onRequest"})," and ",(0,t.jsx)(n.code,{children:"onResponse"})," hooks allow UI state changes (e.g., disabling the button during API call)."]}),"\n",(0,t.jsxs)(n.li,{children:["If successful, ",(0,t.jsx)(n.code,{children:"signUpData"})," contains the response with user details."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"handling-user-login",children:"Handling User Login"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const { data: signInData } = (await authClient.signIn.email(\n  {\n    email: formState.email,\n    password: formState.password,\n    rememberMe: true,\n  },\n  {\n    onRequest: () => {\n      setLoginLoading(true); // Disable button while logging in\n    },\n    onResponse() {\n      setLoginLoading(false); // Re-enable button after response\n    },\n  },\n)) as {\n  data: IAuthResponse | null;\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"explanation-1",children:"Explanation:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rememberMe: true"})," ensures the session persists."]}),"\n",(0,t.jsx)(n.li,{children:"Hooks control UI behavior during authentication."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"managing-user-sessions",children:"Managing User Sessions"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"useSession"})," hook provides session management utilities."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"import { authClient } from 'lib/auth-client';\nimport { useTranslation } from 'react-i18next';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\ntype UseSessionReturnType = {\n  listSession: () => void;\n  revokeOtherSessionExceptCurrentSession: () => void;\n  revokeAllSession: () => void;\n  handleLogout: () => void;\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"accessing-user-sessions",children:"Accessing User Sessions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const listSession = async (): Promise<Awaited<ReturnType<typeof authClient.listSessions>>> => {\n  const sessions = await authClient.listSessions();\n  return sessions;\n};\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Retrieves a list of all active sessions for the logged-in user."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"revoking-other-sessions-except-current",children:"Revoking Other Sessions (Except Current)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const revokeOtherSessionExceptCurrentSession = async (): Promise<void> => {\n  await authClient.revokeOtherSessions();\n};\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Terminates all sessions except the current active session."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"revoking-all-sessions",children:"Revoking All Sessions"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const revokeAllSession = async (): Promise<void> => {\n  await authClient.revokeSessions();\n};\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Logs out the user from all sessions, including the current one."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"logging-out-the-user",children:"Logging Out the User"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const handleLogout = async (): Promise<void> => {\n  localStorage.clear();\n  await authClient.signOut();\n  navigate('/');\n  toast.warning(tCommon('sessionLogout'), { autoClose: false });\n};\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Clears local storage."}),"\n",(0,t.jsxs)(n.li,{children:["Calls ",(0,t.jsx)(n.code,{children:"signOut()"})," to revoke the current session."]}),"\n",(0,t.jsx)(n.li,{children:"Redirects to the home page."}),"\n",(0,t.jsx)(n.li,{children:"Displays a logout warning message."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"session-handling-with-cookies",children:"Session Handling with Cookies"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Better Auth replaces refresh tokens with cookies for better security."})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Session data is stored in ",(0,t.jsx)(n.strong,{children:"HTTP-only cookies"}),", preventing client-side access."]}),"\n",(0,t.jsx)(n.li,{children:"This enhances security by reducing exposure to token theft."}),"\n",(0,t.jsx)(n.li,{children:"The session is automatically refreshed using cookies without exposing refresh tokens."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"accessing-sessions",children:"Accessing Sessions"}),"\n",(0,t.jsx)(n.p,{children:"To access session details:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const { data: session, isPending, error, refetch } = authClient.useSession();\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Provides current session details, including user data and expiration status."}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Better Auth"})," handles authentication and session management."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Session data"})," is stored in ",(0,t.jsx)(n.strong,{children:"cookies"})," instead of refresh tokens for security."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Hooks"})," (",(0,t.jsx)(n.code,{children:"onRequest"}),", ",(0,t.jsx)(n.code,{children:"onResponse"}),") allow UI control during authentication."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Session management"})," functions provide easy revocation and listing of active sessions."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Logout"})," ensures session cleanup and redirects the user properly."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This setup ensures a secure, efficient, and maintainable authentication flow in the frontend application."})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);